@model IEnumerable<WIMS.Models.CompletedItemListItem>

@{
    ViewData["Title"] = "ViewCompletedItems";
    bool isManager = ViewBag.IsManager;
    int i = 0;
    int j = 0;
}

<h1>Completed Work Items</h1>

<p>
    <a asp-action="Index">Go Back to Index</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ItemId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Size)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Type)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateCompleted)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CompletedByName)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ItemId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Size)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Type)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateCompleted)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CompletedByName)
            </td>
            <td>


                @if (item.Type == WIMS.Data.ItemType.Bug)
                {
                    <select id="@($"bugDropDown{i}")">
                        <option value="">Select</option>                        
                        <option value=@($"/WorkItem/BugItemDetails/{item.ItemId}")>Item Details</option>                        
                        @if (isManager)
                        {
                            <option value=@($"/WorkItem/DeleteBugItem/{item.ItemId}")>Delete Item</option>
                            <option value=@($"/WorkItem/ReassignBugItem/{item.ItemId}")>Reassign Item</option>
                        }
                    </select>
                    <a href="" id="@($"bugGo{i}")" class="btn btn-primary">Go</a>
                    i++;
                }
                else
                {
                    <select id="@($"featureDropDown{j}")">
                        <option value="">Select</option>                        
                        <option value=@($"/WorkItem/FeatureItemDetails/{item.ItemId}")>Item Details</option>                        
                        @if (isManager)
                        {
                            <option value=@($"/WorkItem/DeleteFeatureItem/{item.ItemId}")>Delete Item</option>
                            <option value=@($"/WorkItem/ReassignFeatureItem/{item.ItemId}")>Reassign Item</option>
                        }


                    </select>
                    <a href="" id="@($"featureGo{j}")" class="btn btn-primary">Go</a>
                    j++;
                }
                @*                @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
        @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
        @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })*@

            </td>
        </tr>
}
    </tbody>
</table>

<script>
    let i = @i;
    let j = @j;
    let bugDropDowns = [];
    let bugGoButtons = [];
    let featureDropDowns = [];
    let featureGoButtons = [];

    for (let m = 0; m < i; m++)
    {
        let goButtonString = `#bugGo${m}`;
        let dropDownString = `#bugDropDown${m}`;
        bugGoButtons[m] = document.querySelector(goButtonString);
        bugDropDowns[m] = document.querySelector(dropDownString);
        bugDropDowns[m].addEventListener('change', () => bugSetHrefVal(m));
    }

    for (let n = 0; n < j; n++)
    {
        let goButtonString = `#featureGo${n}`;
        let dropDownString = `#featureDropDown${n}`;
        featureGoButtons[n] = document.querySelector(goButtonString);
        featureDropDowns[n] = document.querySelector(dropDownString);
        featureDropDowns[n].addEventListener('change', () => featureSetHrefVal(n));
    }

    function bugSetHrefVal(position) {

        bugGoButtons[position].setAttribute("href", bugDropDowns[position].value);
    }

    function featureSetHrefVal(position) {

        featureGoButtons[position].setAttribute("href", featureDropDowns[position].value);
    }
</script>